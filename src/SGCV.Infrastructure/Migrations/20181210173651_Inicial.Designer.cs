// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGCV.Infrastructure.Data;

namespace SGCV.Infrastructure.Migrations
{
    [DbContext(typeof(SGCVContext))]
    [Migration("20181210173651_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<int>("EspecieId");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(5)");

                    b.HasKey("AnimalId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EspecieId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            AnimalId = 1,
                            ClienteId = 1,
                            EspecieId = 1,
                            Idade = 2,
                            Nome = "Chulin",
                            Sexo = "Macho"
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Email = "lucasandre@gmail.com",
                            Nome = "Lucas André"
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("ConsultaId");

                    b.ToTable("Consultas");

                    b.HasData(
                        new
                        {
                            ConsultaId = 1,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Observacao = "Consulta de Rotina"
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.ConsultaAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId");

                    b.Property<int>("ConsultaId");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ConsultaId");

                    b.ToTable("MarcarConsulta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            ConsultaId = 1
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoId = 1,
                            Bairro = "CPA III",
                            CEP = "78058-326",
                            ClienteId = 1,
                            Logradouro = "Rua cinco, Quandra 04",
                            Numero = "180"
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Especie", b =>
                {
                    b.Property<int>("EspecieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("EspecieId");

                    b.ToTable("Especies");

                    b.HasData(
                        new
                        {
                            EspecieId = 1,
                            Descricao = "PitBull"
                        });
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Animal", b =>
                {
                    b.HasOne("SGCV.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithMany("Animal")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGCV.ApplicationCore.Entity.Especie", "Especie")
                        .WithMany("Animals")
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.ConsultaAnimal", b =>
                {
                    b.HasOne("SGCV.ApplicationCore.Entity.Animal", "Animal")
                        .WithMany("ConsultarAnimais")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGCV.ApplicationCore.Entity.Consulta", "Consulta")
                        .WithMany("ConsultarAnimais")
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGCV.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGCV.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("SGCV.ApplicationCore.Entity.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
